openapi: 3.0.3
info:
  title: Price API
  description: API to retrieve prices based on date, productId, and brandId.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local server
paths:
  /prices:
    get:
      summary: Get price by date, productId, and brandId
      operationId: getPrice
      parameters:
        - name: date
          in: query
          required: true
          description: Date in the format yyyy-MM-dd HH:mm:ss
          schema:
            pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$'
            type: string
            format: time
            example: '2024-10-08 14:30:00'
        - name: productId
          in: query
          required: true
          description: ID of the product
          schema:
            type: integer
            example: 35455
        - name: brandId
          in: query
          required: true
          description: ID of the brand
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Price found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
        '400':
          description: Invalid input
        '404':
          description: Price not found
components:
  schemas:
    Price:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        brandId:
          type: integer
          example: 1
        startDate:
          type: string
          format: time
          example: '2024-06-14T00:00:00'
        endDate:
          type: string
          format: time
          example: '2024-06-14T23:59:59'
        priceList:
          type: integer
          example: 1
        productId:
          type: long
          example: 35455
        priority:
          type: integer
          example: 0
        price:
          type: number
          format: bigdecimal
          example: 35.50
        curr:
          type: string
          example: 'EUR'